class Solution:
    def findKRotation(self,arr,  n):
        n = len(arr)
        low, high = 0, n - 1

        while low <= high:
            mid = (low + high) // 2

            # Check if mid is the minimum element
            if arr[mid] < arr[(mid + 1) % n] and arr[mid] < arr[(mid - 1) % n]:
                return mid

            # If the right half is sorted, the rotation point is in the left half
            elif arr[mid] <= arr[high]:
                high = mid - 1

            # If the left half is sorted, the rotation point is in the right half
            else:
                low = mid + 1

        return 0 
